<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dzr.holder.mapper.HolderNumMapper">
  <resultMap id="BaseResultMap" type="dzr.holder.entity.HolderNum">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="total_market_cap" jdbcType="DECIMAL" property="totalMarketCap" />
    <result column="change_shares" jdbcType="BIGINT" property="changeShares" />
    <result column="holder_num" jdbcType="BIGINT" property="holderNum" />
    <result column="holder_num_change" jdbcType="BIGINT" property="holderNumChange" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="report_date" jdbcType="DATE" property="reportDate" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="pre_holder_num" jdbcType="BIGINT" property="preHolderNum" />
    <result column="hold_notice_date" jdbcType="DATE" property="holdNoticeDate" />
    <result column="holder_num_ratio" jdbcType="DECIMAL" property="holderNumRatio" />
    <result column="pre_end_date" jdbcType="DATE" property="preEndDate" />
    <result column="change_reason" jdbcType="VARCHAR" property="changeReason" />
    <result column="total_a_shares" jdbcType="BIGINT" property="totalAShares" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, total_market_cap, change_shares, holder_num, holder_num_change, name,
    report_date, code, pre_holder_num, hold_notice_date, holder_num_ratio, pre_end_date,
    change_reason, total_a_shares, create_time, update_time
  </sql>


  <select id="selectNewestReportDateByCode" parameterType="java.lang.String" resultType ="java.util.Date" >
    select
      MAX(report_date) as report_date
    from holder_num
    where code = #{code}
  </select>

  <insert id="batchInsert" parameterType="java.util.List">
    insert into holder_num
    (total_market_cap, change_shares, holder_num, holder_num_change, name,
    report_date, code, pre_holder_num, hold_notice_date, holder_num_ratio, pre_end_date,
    change_reason, total_a_shares)
    values
    <foreach collection="list" item="holder" separator=",">
      (#{holder.totalMarketCap},#{holder.changeShares},#{holder.holderNum},#{holder.holderNumChange},
      #{holder.name},#{holder.reportDate},#{holder.code},
      #{holder.preHolderNum},#{holder.holdNoticeDate},#{holder.holderNumRatio},
      #{holder.preEndDate},#{holder.changeReason},#{holder.totalAShares})
    </foreach>
    on duplicate key update update_time = now()
  </insert>

  <delete id="batchDelete" parameterType="java.util.List">
    delete from holder_num where code in
    <foreach collection="list" item="tmp" separator="," open="(" close=")" index="">
      #{tmp.code}
    </foreach>
  </delete>

  <select id="selectByCodes" parameterType="java.util.List" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from holder_num
    where code in
    <foreach collection="list" item="code" separator="," open="(" close=")" index="">
      #{code}
    </foreach>
  </select>

  <select id="selectByCode"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from holder_num
    where code = #{code}
  </select>
</mapper>
